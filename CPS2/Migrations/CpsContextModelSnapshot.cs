// <auto-generated />
using System;
using CPS2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPS2.Migrations
{
    [DbContext(typeof(CpsContext))]
    partial class CpsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CPS2.Models.Cp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Customticker")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customticker");

                    b.Property<string>("Fameticker")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fameticker");

                    b.Property<string>("Holidaycalender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("holidaycalender");

                    b.Property<string>("Inputgranularity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inputgranularity");

                    b.Property<string>("Inputunit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inputunit");

                    b.Property<decimal?>("Maxprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("maxprice");

                    b.Property<decimal?>("Minprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("minprice");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifieddate");

                    b.Property<string>("Platt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("platt");

                    b.Property<string>("Priceseriesname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("priceseriesname");

                    b.HasKey("Id")
                        .HasName("PK__Cps__3214EC0761060776");

                    b.ToTable("Cps");
                });

            modelBuilder.Entity("CPS2.Models.Ecfsetup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Energyconversioname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("energyconversioname");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifieddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PK__Ecfsetup__3214EC07BCEFF169");

                    b.ToTable("Ecfsetup", (string)null);
                });

            modelBuilder.Entity("CPS2.Models.Fxr", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Fameticker")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fameticker");

                    b.Property<string>("Fxrateseriesname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fxrateseriesname");

                    b.Property<string>("Holidaycalender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("holidaycalender");

                    b.Property<string>("Inputgranularity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("inputgranularity");

                    b.Property<decimal?>("Maxprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("maxprice");

                    b.Property<decimal?>("Minprice")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("minprice");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifieddate");

                    b.HasKey("Id")
                        .HasName("PK__Fxrs__3214EC07DC5058F7");

                    b.ToTable("Fxrs");
                });

            modelBuilder.Entity("CPS2.Models.Holidaycalendersetup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("date")
                        .HasColumnName("dates");

                    b.Property<string>("Excludewee")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("excludewee")
                        .IsFixedLength();

                    b.Property<string>("Holidayname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("holidayname");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("datetime")
                        .HasColumnName("modifieddate");

                    b.HasKey("Id")
                        .HasName("PK__Holidayc__3214EC077E3701DB");

                    b.ToTable("Holidaycalendersetup", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
